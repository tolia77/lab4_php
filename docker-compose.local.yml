services:
  php:
    image: '${PHP_IMAGE}'
    restart: always
    tty: true
    volumes:
      - ./:/var/www
      - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - redis
      - mysql
    networks:
      - app

  vite:
    image: '${PHP_IMAGE}'
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    networks:
      - app
    command: npm run dev
    depends_on:
      - php

  nginx:
    image: nginx:latest
    ports:
      - ${APP_PORT:-8080}:8080
    volumes:
      - ./:/var/www
      - ./.docker/nginx/conf/${APP_ENV}.conf:/etc/nginx/conf.d/default.conf
    command: /bin/sh -c "usermod -u 1000 nginx && nginx -g 'daemon off;'"
    networks:
      - app
    depends_on:
      - php
    restart: always

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app
    ports:
      - 3307:3306
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
      retries: 3
      timeout: 5s

  redis:
    image: 'redis:alpine'
    volumes:
      - redisdata:/data
    networks:
      - app
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s

networks:
  app:
    driver: bridge

volumes:
  dbdata:
    driver: local
  redisdata:
    driver: local
